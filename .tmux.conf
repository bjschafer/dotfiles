# change bind key from C-b to C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -s escape-time 0       # tmux won't wait after escape to see if it's part of a function
set-option -g history-limit 10000 # increase scrollback buffer
set -g base-index 1               # windows start at 1, not 0
setw -g pane-base-index 1         # make pane numbering consistent with windows
set -g visual-activity off        # don't flash when other panes change
set -g visual-bell on             # do flash when term would ring
set -g renumber-windows on        # when a window closes, change numbers to match

setw -g mouse on                  # enables mouse support to change windows & resize splits

set-window-option -g mode-keys vi                    # i want to use vi-style mappings
set-window-option -g automatic-rename off            # don't automatically change window title based on running program
set-option -g allow-rename off                       # programs can't change the window title (we still can, though)
bind-key -T copy-mode-vi 'v' send -X begin-selection # vi-style yank
bind-key -T copy-mode-vi 'y' send -X copy-selection  # vi-style yank 
# Make p behave like vim paste
unbind p
bind p paste-buffer

bind r source-file ~/.tmux.conf                        # re-source this file with C-a r
bind C-s command-prompt "new-window -n %1 'ssh -A %%'" # C-a, C-s will prompt for a hostname and then ssh to it
bind C-m command-prompt "new-window -n %1 'mosh %%'"   # C-a, C-m will prompt for a hostname and `mosh` to it.
bind C-p new-window -n pwsh 'pwsh'                     # C-a, C-p will open a powershell tab
bind C-c new-window                                    # C-a, C-c creates a new window
bind | split-window –h                                 # C-a, | creates a horizontal split
bind - split-window –v                                 # C-a, - creates a vertical split

# https://unix.stackexchange.com/questions/158278/tmux-how-do-i-bind-to-c-control-minus
# C-\ can actually be called with C-|, and C-_ with C--. This makes this more in-line with | and - to do splits
# prefix, Ctrl+h will take the name of the current pane, split the pane horizontally and then ssh to the pane name
bind C-h split-window -h 'HOST=`tmux display-message -p "#W"` && ssh $HOST' 
# prefix, Ctrl+v will take the name of the current pane, split the pane vertically and then ssh to the pane name
bind C-v split-window -v 'HOST=`tmux display-message -p "#W"` && ssh $HOST'

bind \; previous-window # C-a, ; will go to the last window
# C-a, hjkl - vim-style pane nav
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

# maximize current pane
bind + run 'sh -s _maximize_pane "#{session_name}" #D'

set-window-option -g status-bg blue # status bar background is blue

bind-key J command-prompt -p "join pane from:" "join-pane -s '%%'" # C-a, J will prompt for a window number and move it to this window
bind-key S command-prompt -p "send pane to:" "join-pane -t '%%'"   # C-a, S will prmopt for a window number and move this pane to that window
bind-key C set -g synchronize-panes # C-a, C will send your keystrokes to every pane in the current window. WEAPONIZED TMUX.

# Remember: C-a M-{1..5} (meta is esc on Mac, alt otherwise) are various resizing schemes
# Remember: C-a $ renames a session
# Remember: C-a , renames a window

bind Escape copy-mode # Can do C-a, esc to enter scrollback/"visual" mode


## from https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# kill pane/window shortcuts
bind x kill-pane
bind X kill-window

# outline for active pane
setw -g pane-active-border-style "fg=colour166"

# nesting local and remote sessions
# Session is considered to be remote when we ssh into host

if-shell 'test -n "$SSH_CLIENT" && ! test "$TERM_CLIENT" = "PuTTY"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session
# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237
# Also, change some visual styles when window keys are off

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=colour245,bg=colour238" \;\
    set window-status-current-format "#[fg=colour238,bg=colour254]|#[default] #I:#W# #[fg=colour254,bg=colour238]|#[default]" \;\
    set window-status-current-style "fg=colour232,bold,bg=colour254" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# end section special remote handling

# plugins
# these are all github paths.
# some may supercede above options, which are in place in case we don't have plugins.
set -g @plugin 'tmux-plugins/tpm'                     # tmux plugin manager
set -g @plugin 'tmux-plugins/tmux-sensible'           # sensible defaults everyone can agree on
set -g @plugin 'tmux-plugins/tmux-yank'               # better yank control
set -g @plugin 'tmux-plugins/tmux-resurrect'          # when session is killed, bring windows back when restarted
set -g @plugin 'tmux-plugins/tmux-continuum'          # saves window layout regularly
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'   # Adds icon in bottom-right when prefix has been pressed
set -g @plugin 'tmux-plugins/tmux-pain-control'       # Better pane management
set -g @plugin 'tmux-plugins/tmux-cpu'                # Enables CPU percentage in status bar
set -g @plugin 'tmux-plugins/tmux-logging'            # Enables logging commands, e.g. log all terminal output to file
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-copycat'            # Better copypasta
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'christoomey/vim-tmux-navigator'       # Helps tmux play nicely with vim splits

# status bars
set -g status-left-length 32
# #h is hostname without domain. useful for nested sessions
set -g status-left "[#h] "
set -g status-right '#{?pane_synchronized, #[bg=yellow]SYNC#[default],}#{cpu_bg_color} CPU: #{cpu_percentage} #{prefix_highlight}'

set -g @continuum-restore 'on'
set -g @resurrect-save 'X'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh mosh-client pwsh task.bash'

# mouse improvements (?)
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# keep this line at the bottom
run -b '~/.tmux/plugins/tpm/tpm'
