unbind C-b
set -g prefix C-a
bind C-a send-prefix

set-option -s escape-time 0
set-option -g history-limit 10000
set -g base-index 1
set -g visual-activity off
set -g visual-bell on
set -g renumber-windows on

setw -g mouse on

set-window-option -g mode-keys vi
set-window-option -g automatic-rename off
set-option -g allow-rename off
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

bind r source-file ~/.tmux.conf
# prefix, Ctrl+s will prompt for a hostname and then ssh to it
bind C-s command-prompt "new-window -n %1 'ssh -A %%'"
bind C-m command-prompt "new-window -n %1 'mosh %%'"
bind C-p command-prompt "new-window -n pwsh 'pwsh'"
bind C-c new-window
bind | split-window –h
bind - split-window –v

# https://unix.stackexchange.com/questions/158278/tmux-how-do-i-bind-to-c-control-minus
# C-\ can actually be called with C-|, and C-_ with C--. This makes this more in-line with | and - to do splits
# prefix, Ctrl+h will take the name of the current pane, split the pane horizontally and then ssh to the pane name
bind C-h split-window -h 'HOST=`tmux display-message -p "#W"` && ssh $HOST' 
# prefix, Ctrl+v will take the name of the current pane, split the pane vertically and then ssh to the pane name
bind C-v split-window -v 'HOST=`tmux display-message -p "#W"` && ssh $HOST'

bind \; previous-window
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

set-window-option -g status-bg blue

bind-key J command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key C set -g synchronize-panes

# Remember: C-a M-{1..5} (meta is esc on Mac, alt otherwise) are various resizing schemes
# Remember: C-a $ renames a session

set -g mode-keys vi
bind Escape copy-mode
unbind p
bind p paste-buffer
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

## from https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# Link window
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# kill pane/window shortcuts
bind x kill-pane
bind X kill-window

# outline for active pane
setw -g pane-active-border-style "fg=colour166"

# nesting local and remote sessions
# Session is considered to be remote when we ssh into host

if-shell 'test -n "$SSH_CLIENT" && ! test "$TERM_CLIENT" = "PuTTY"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session
# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237
# Also, change some visual styles when window keys are off

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=colour245,bg=colour238" \;\
    set window-status-current-format "#[fg=colour238,bg=colour254]|#[default] #I:#W# #[fg=colour254,bg=colour238]|#[default]" \;\
    set window-status-current-style "fg=colour232,bold,bg=colour254" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/vim-tmux-focus-events'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'christoomey/vim-tmux-navigator'

# status bars
set -g status-left-length 32
# #h is hostname without domain. useful for nested sessions
set -g status-left "[#h] "
set -g status-right '#{?pane_synchronized, #[bg=yellow]SYNC#[default],}#{cpu_bg_color} CPU: #{cpu_percentage} #{prefix_highlight}'

set -g @continuum-restore 'on'
set -g @resurrect-save 'X'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ssh mosh-client pwsh task.bash'

# mouse improvements (?)
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# keep this line at the bottom
run -b '~/.tmux/plugins/tpm/tpm'
