if command -v nvim >/dev/null 2>&1; then
	alias vim='nvim'
	alias vi='nvim'
elif command -v vim >/dev/null 2>&1; then
	alias vi='vim'
fi

if command -v bat >/dev/null; then
    alias cat='bat'
fi

alias purevim='vim -u NONE'
alias ll='\ls -l'

OSFAMILY=$(
    lsbrelease=$(lsb_release -a | awk '/Distributor ID/ {print $NF}')
    if [[ $lsbrelease =~ Manjaro* ]] || [[ $lsbrelease =~ Arch* ]]; then
        echo Arch
    elif [[ $lsbrelease == Ubuntu ]] || [[ $lsbrelease == Debian ]] || [[ $lsbrelease == Raspbian ]]; then
        echo Debian
    else
        echo "not implemented"
    fi
)
export OSFAMILY

reboot-required() {
    if [[ "$OSFAMILY" == "Arch" ]]; then
        diff -q <(sed 's/ x64//g' "$(find /boot/linux* | tail -1)") <(uname -r ) >/dev/null || echo 'yes'
    elif [[ "$OSFAMILY" == "Debian" ]]; then
        test -f '/var/run/reboot-required' && echo 'yes'
    fi
}

tmux-select() {
	local sessions
	sessions=$(tmux ls -F '#S')
	if [ "$(echo "$sessions" | wc -l)" -eq 1 ]; then
		tmux at -t "$sessions"
	else
		select sel in $(tmux ls -F '#S'); do break; done && tmux at -t "$sel"
	fi
}
tmux-kill() {
	select sel in $(tmux ls -F '#S'); do break; done && tmux kill-session -t "$sel"
}

alias cs='/nfs/ask/cats/scripts/utility/cs'
alias cso='/nfs/ask/cats/scripts/utility/cs -o'
alias chk='/nfs/ask/cats/scripts/utility/chk'
alias qlist='/nfs/ask/cats/scripts/qlist.py'
alias oss='/nfs/ask/cats/scripts/utility/oss'

session() {
	if [ "$1" = "-o" ] || [ "$1" = "-d" ] || [ "$1" = "-r" ]; then
		select sel in $(qlist | awk -F'^' '{ print $1}'); do break; done && cs "$1" "$sel" -U "$sel"
	else
		select sel in $(qlist | awk -F'^' '{ print $1}'); do break; done && cs "$sel" -U "$sel"
	fi

}

if command -v ldapsearch >/dev/null; then
	ldap() {
		ldapsearch -x -H ldap://epic-ldaplb.epic.com $@
	}
fi

ssh-fingerprint() {
	local pubkey="$1"
	if [ -f "$pubkey" ]; then
		ssh-keygen -lf "$pubkey"
	else
		ssh-keygen -lf <("$pubkey")
	fi
}

envlist() {
	# shamelessly stolen from byanke at
	# https://catlab.epic.com/byanke/scripts/-/blob/master/dotfiles/dot.bash.d/981-envlist
	# TODO : add alternate qlist

	QLIST="/usr/local/cats/bin/qlist.py"
    if ! [ -x "$QLIST" ]; then
        echo "$QLIST not found"
        return
    fi

	echo
	echo "Found the following instances:"
	$QLIST | while read -r line; do
		instance=$(echo "$line" | awk -F "^" '{print $1}')
		path=$(echo "$line" | awk -F "^" '{print $2}')
		status=$(echo "$line" | awk -F "^" '{print $4}')
		port1=$(echo "$line" | awk -F "^" '{print $6}')
		port2=$(echo "$line" | awk -F "^" '{print $7}')

		echo

		echo " - $instance @ $path"
		echo "   Status: $status"

		if [[ "$port1" == "" && "$port2" == "" ]]; then
			echo "   No listening ports"
		elif [[ "$port1" == "" ]]; then
			echo "   Webserver on $port2"
		elif [[ "$port2" == "" ]]; then
			echo "   Superserver on $port1"
		else
            echo "   Superserver on $port1"
			echo "   Webserver on $port2"
			echo "   Webserver on $port2"
		fi

	done

}

#if which hammer >/dev/null 2>&1; then
#    hammer() {
#        /usr/local/bin/hammer $@ 2>/dev/null
#    }
#fi

# vi: ft=sh
