# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Inserts a blank line between shell prompts
add_newline = false
palette = "catppuccin_frappe"

format = '''
‚îå$username$hostname$kubernetes$git_branch$git_commit$python$golang $fill $git_status$git_state
‚îî$directory$character
'''

right_format = '''$status'''

command_timeout = 1000 # ms, default 500

[character]
success_symbol = '>'
error_symbol = '[!>](bold red)'
vimcmd_symbol = '[<](bold green)'
vimcmd_replace_one_symbol = '[<](bold purple)'
vimcmd_replace_symbol = '[<](bold purple)'
vimcmd_visual_symbol = '[<](bold yellow)'

[directory]
format = '\[[$path]($style)[$read_only]($read_only_style)\]'
truncation_length = 8
truncate_to_repo = false

[directory.substitutions]
"development/generators" = "@gen"
"development" = "@dev"

[fill]
symbol = ' '

[username]
format = '\[[$user]($style)@'
show_always = true

[hostname]
format = '[$hostname]($style)$ssh_symbol\]'
ssh_only = false
ssh_symbol = 'üåê'

[kubernetes]
format = '\[[$context](red):[$namespace]($style)\]'
disabled = false

[[kubernetes.contexts]]
context_pattern = 'cfctl-(?P<cluster>[\w-]+)'
context_alias = "$cluster"

[[kubernetes.contexts]]
context_pattern = 'admin-(?P<cluster>[\w-]+)'
context_alias = "ADMIN-$cluster"

## bracketed-segments
[cmd_duration]
format = '\[[‚è± $duration]($style)\]'
[deno]
format = '\[[$symbol($version)]($style)\]'

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[$symbol($version)(üéØ $tfm)]($style)\]'

[git_branch]
format = '\[[$symbol$branch]($style)\]'

[git_commit]
format = '\[[$tag\]]($style)'
tag_disabled = false # we _do_ want to show a checked out tag
tag_symbol = 'üè∑ '

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'
untracked = '??'
modified = 'M'

[golang]
format = '\[[($version)]($style)\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[$symbol($version)]($style)\]'

[package]
format = '\[[$symbol$version]($style)\]'

[python]
format = '\[[$symbol${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'
symbol = 'Û∞å†'
version_format = '${raw}' # no leading v
detect_extensions = [] # don't turn on for any .py file (instead use python project-specific files)

[rust]
format = '\[[$symbol($version)]($style)\]'

[status]
disabled = false
format = '[$symbol $common_meaning$signal_name$maybe_int]($style)'

[sudo]
format = '\[[$symbol]($style)\]'

[terraform]
format = '\[[$symbol$workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[palettes.catppuccin_frappe]
rosewater = "#f2d5cf"
flamingo = "#eebebe"
pink = "#f4b8e4"
mauve = "#ca9ee6"
red = "#e78284"
maroon = "#ea999c"
peach = "#ef9f76"
yellow = "#e5c890"
green = "#a6d189"
teal = "#81c8be"
sky = "#99d1db"
sapphire = "#85c1dc"
blue = "#8caaee"
lavender = "#babbf1"
text = "#c6d0f5"
subtext1 = "#b5bfe2"
subtext0 = "#a5adce"
overlay2 = "#949cbb"
overlay1 = "#838ba7"
overlay0 = "#737994"
surface2 = "#626880"
surface1 = "#51576d"
surface0 = "#414559"
base = "#303446"
mantle = "#292c3c"
crust = "#232634"
