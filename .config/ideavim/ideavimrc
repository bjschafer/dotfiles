" vim: set sw=4 sts=4 tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:

" Plugins {
" these plugins are all emulated by ideavim
" but could be added to a 'real' vimrc
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'easymotion/vim-easymotion'
Plug 'michaeljsmith/vim-indent-object'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
set sneak
" }

" Tabs settings {
set nowrap              " do not wrap long lines
set autoindent          " indent at the same level as the previous line
set shiftwidth=4        " use indents of 4 spaces
set tabstop=4           " an indentation every four columns
set expandtab           " tabs are spaces, not tabs
set smartindent         " smart autoindent when starting a new line
set nojoinspaces        " prevent inserting two spaces after punctuation on a join (J)
set pastetoggle=<f5>    " stop stupid autoindent when pasting
" }

" Numbering {
" press f6 to hide all line numbers, useful when copying from the terminal.
noremap <f6> :set relativenumber!<CR>:set number!<CR>

set number relativenumber

augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END
" }

let mapleader = "<SPC>"

set showcmd " show leader, at least

" Trigger `autoread` when files changes on disk
" https://unix.stackexchange.com/questions/149209/refresh-changed-content-of-file-opened-in-vim/383044#383044
" https://vi.stackexchange.com/questions/13692/prevent-focusgained-autocmd-running-in-command-line-editing-mode
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif

" Undo {
" save undo tree to files
set undofile
set undodir=~/.config/ideavim/undo
set undolevels=10000
" }


" IdeaVim options {
if has('ide')
    set ideajoin " language-aware J
    set ideamarks
    set ideaput

    map <leader>b <Action>(ToggleLineBreakpoint)
    " this works for all langs
    map <leader>d <Action>(QuickJavaDoc)
    map <leader>e <Action>(ShowErrorDescription)
    map <leader>f <Action>(ShowIntentionAction)
    map <leader>r <Action>(ReformatCode)

    " keymap settings
    sethandler <C-R> a:vim
    sethandler <C-V> a:vim
endif
" }
